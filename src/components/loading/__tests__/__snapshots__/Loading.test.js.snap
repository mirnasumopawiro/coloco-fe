// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Should render Loading without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Loading
    isOpen={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "autoFocus": true,
      "backdrop": true,
      "backdropTransition": Object {
        "mountOnEnter": true,
        "timeout": 150,
      },
      "centered": false,
      "children": <ModalBody
        tag="div"
      >
        <Loader
          color="#00BFFF"
          height="75"
          type="ThreeDots"
          visible={true}
          width="75"
        />
      </ModalBody>,
      "className": "loading-wrapper",
      "fade": true,
      "isOpen": true,
      "keyboard": true,
      "modalTransition": Object {
        "timeout": 300,
      },
      "onClosed": [Function],
      "onOpened": [Function],
      "role": "dialog",
      "size": "sm",
      "zIndex": 1050,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <Loader
          color="#00BFFF"
          height="75"
          type="ThreeDots"
          visible={true}
          width="75"
        />,
        "tag": "div",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "color": "#00BFFF",
          "height": "75",
          "type": "ThreeDots",
          "visible": true,
          "width": "75",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "autoFocus": true,
        "backdrop": true,
        "backdropTransition": Object {
          "mountOnEnter": true,
          "timeout": 150,
        },
        "centered": false,
        "children": <ModalBody
          tag="div"
        >
          <Loader
            color="#00BFFF"
            height="75"
            type="ThreeDots"
            visible={true}
            width="75"
          />
        </ModalBody>,
        "className": "loading-wrapper",
        "fade": true,
        "isOpen": true,
        "keyboard": true,
        "modalTransition": Object {
          "timeout": 300,
        },
        "onClosed": [Function],
        "onOpened": [Function],
        "role": "dialog",
        "size": "sm",
        "zIndex": 1050,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Loader
            color="#00BFFF"
            height="75"
            type="ThreeDots"
            visible={true}
            width="75"
          />,
          "tag": "div",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "color": "#00BFFF",
            "height": "75",
            "type": "ThreeDots",
            "visible": true,
            "width": "75",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
